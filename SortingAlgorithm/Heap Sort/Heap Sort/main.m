//
//  main.m
//  Heap Sort
//
//  Created by 杨卢青 on 16/9/13.
//  Copyright © 2016年 杨卢青. All rights reserved.
//

#import <Foundation/Foundation.h>


/**
 
 > 二叉堆:
 
 二叉堆是完全二叉树或者是近似完全二叉树。
 
 二叉堆满足两个特性：
 
 1．父结点的键值总是大于或等于（小于或等于）任何一个子节点的键值。
 
 2．每个结点的左子树和右子树都是一个二叉堆（都是最大堆或最小堆）。
 
 当父结点的键值总是大于或等于任何一个子节点的键值时为最大堆。当父结点的键值总是小于或等于任何一个子节点的键值时为最小堆。
 
 由于其它几种堆（二项式堆，斐波纳契堆等）用的较少，一般将二叉堆就简称为堆。
 
 
 > 堆的存储:
 
 一般都用数组来表示堆，i结点的父结点下标就为(i – 1) / 2。
 
 它的左右子结点下标分别为2 * i + 1和2 * i + 2。如第0个结点左右子结点下标分别为1和2。
 
 > 堆的操作——插入删除
 
 1. 建立堆: 数组具有对应的树表示形式. 通过重新排列元素, 可以建立一颗"堆化"的树
 
 2. 插入一个元素: 新元素被加入到表层, 随后树被更新以回复堆次序. 
 
 3. 删除一个元素: 删除总是发生在A[0]处. 表中最后一个元素用来填补空缺, 最后更新结果树
 */

int main(int argc, const char * argv[]) {
	@autoreleasepool {
	    // insert code here...
	    NSLog(@"Hello, World!");
	}
    return 0;
}
